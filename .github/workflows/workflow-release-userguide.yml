name: iotdb 用户手册发布
on:
#  push:
#    branches:
#      - master
  workflow_dispatch:

jobs:
#--------
  check-commit:
    runs-on: ubuntu-latest
    steps:
# get pandoc
      - name: get pandoc
        id: get-pandoc
        run: |
          wget https://github.com/jgm/pandoc/releases/download/2.19/pandoc-2.19-linux-amd64.tar.gz
          tar -zxf pandoc-2.19-linux-amd64.tar.gz
          cd pandoc-2.19/bin
          echo  "::set-output name=pandoc_bin::$(echo $(pwd))"
# clone iotdb
      - name: checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb-master
          repository: 'apache/iotdb'
          ref: 'master'
          fetch-depth: 0
# clone 本程序
      - name: checkout iotdb-daily-build
        uses: actions/checkout@v2
        with:
          path: iotdb-daily-build
          repository: 'thulab/iotdb-daily-build'
          ref: master
          fetch-depth: 0
# generate
      - name: generate
        env:
          PYTHONPATH: $PYTHONPATH:${{ github.workspace }}/iotdb-daily-build/action-release-userguide/program
        run: |
          cd ${{ github.workspace }}/iotdb-master
          iotdb_home=$(pwd)
          export PATH=$PATH:${{ steps.get-pandoc.outputs.pandoc_bin }}
          echo ${PYTHONPATH}
          cd ${{ github.workspace }}/iotdb-daily-build/action-release-userguide/program
          python3 main.py ${iotdb_home}
          zip -r result.zip
          mv result.zip ${{ github.workspace }}/result.zip
#          zip result.zip result.docx ${{ github.workspace }}/iotdb-daily-build/action-release-userguide/program/tmp
# collect time
      - name: collect common info
        shell: bash
        id: sys-info
        run: |
          cd ${{ github.workspace }}/iotdb
          echo "date=$(date +"%Y-%m-%d")" >> $GITHUB_OUTPUT
          echo "commit_id=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

# 创建release
      - name: Create UserGuide release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.sys-info.outputs.date }}-userguide-${{ steps.sys-info.outputs.commit_id }}
          release_name: ${{ steps.sys-info.outputs.date }} userguide ${{ steps.sys-info.outputs.commit_id }}
          body: null
          draft: false
          prerelease: false

# 上传docs.zip到release
      - name: Upload docs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/result.zip
          asset_name: userguide-${{ steps.sys-info.outputs.date }}-${{ steps.sys-info.outputs.commit_id }}.zip
          asset_content_type: application/zip
