# Build iotdb-rel/0.13, iotdb-rel/1.0, master, iot-benchmark
# Everyday
name: iotdb 每日发布
on:
#  push:
#    branches:
#      - master
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      date: ${{steps.sys-info.outputs.date}}
    steps:
      - name: collect common info
        shell: bash
        id: sys-info
        run: echo "::set-output name=date::$(date +"%Y-%m-%d")"
#--------
  create-release-java8:
    needs: collect
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create release java-8
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.collect.outputs.date }}-java8-apache-iotdb
          release_name: ${{ needs.collect.outputs.date }} java8 apache iotdb
          body: java 8
          draft: false
          prerelease: false
#--------
  create-release-java11:
    runs-on: ubuntu-latest
    needs: collect
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create release java-11
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.collect.outputs.date }}-java11-apache-iotdb
          release_name: ${{ needs.collect.outputs.date }} java11 apache iotdb
          body: java 11
          draft: false
          prerelease: false
#--------
  build-in-win:
    needs: [ collect,create-release-java8,create-release-java11 ]
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        iotdb_version: [ rel/0.13,rel/1.0,master ]
        java_version: [ 8,11 ]
        os: [ windows-2022 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}

      - name: download & unpack & install -> boost
        shell: cmd
        run: |
          C:\msys64\usr\bin\wget.exe -O ${{ github.workspace }}/boost_1_78_0-bin.7z https://github.com/xiaoyekanren/iotdb-daily-build-dependence/releases/download/release-depend-bin/boost_1_78_0-bin.7z
          7z x ${{ github.workspace }}/boost_1_78_0-bin.7z -o${{ github.workspace }}/boost_1_78_0
#          C:\msys64\usr\bin\wget.exe -O ${{ github.workspace }}/boost_1_78_0.zip https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.zip
#          7z x ${{ github.workspace }}/boost_1_78_0.zip -o${{ github.workspace }}/boost_1_78_0
#          cd ${{ github.workspace }}/boost_1_78_0/boost_1_78_0
#          .\bootstrap.bat
#          .\b2
#          echo "::set-output name=include::$(git branch |grep ^*|cut -d ' ' -f 2)"
#          echo "::set-output name=library::$(git branch |grep ^*|cut -d ' ' -f 2)"

      - name: download & unpack flex&bison
        shell: cmd
        run: |
          C:\msys64\usr\bin\wget.exe -O ${{ github.workspace }}/win_flex_bison-latest.zip https://jaist.dl.sourceforge.net/project/winflexbison/win_flex_bison-latest.zip
          7z x ${{ github.workspace }}/win_flex_bison-latest.zip -o${{ github.workspace }}/win_flex_bison-latest

      - name: install openssl
        run: |
          choco install openssl

      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: ${{ matrix.iotdb_version }}
          fetch-depth: 0

      - name: Collect IoTDB info
        id: iotdb-info
        shell: bash
        run: |
          cd iotdb
          echo "::set-output name=commit::$(git rev-parse --short HEAD)"
          echo "::set-output name=branch::$(git branch |grep ^*|cut -d ' ' -f 2)"
          echo "::set-output name=version::$(cat pom.xml | grep -e '^    <version>' | sed 's# ##g' | sed 's#<version>##g' | sed 's#</version>##g')"
          # To distinguish master and rel/1.0 branches, add temporary variables
          echo "::set-output name=tmp_branch::$(echo ${{ matrix.iotdb_version }} | sed "s:/::")"

#      - name: compile client-cpp
#        if: ${{ matrix.os == 'windows-2019' }}
#        shell: cmd
#        env:
#          boost-include-dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0
#          boost-library.dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0\stage\lib
#          cmake-url: https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-windows-x86_64.zip
#          cmake-root-dir : ${{ github.workspace }}\iotdb\compile-tools\thrift\target\cmake-3.23.1-windows-x86_64
#        run: |
#          cd ${{ github.workspace }}\iotdb
#          set Path=%Path%;${{ github.workspace }}\win_flex_bison-latest
#          set Path
#          mvn package -Dcmake.generator="Visual Studio 16 2019" -P compile-cpp -pl server,client-cpp,example/client-cpp-example -am -DskipTests -Dboost.include.dir="%boost-include-dir%" -Dboost.library.dir="%boost-library.dir%" -Dcmake.url="%cmake-url%" -Dcmake.root.dir="%cmake-root-dir%"

      - name: compile client-cpp
        if: ${{ matrix.os == 'windows-2022' }}
        shell: cmd
        env:
          boost-include-dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0
          boost-library.dir: ${{ github.workspace }}\boost_1_78_0\boost_1_78_0\stage\lib
          cmake-url: https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-windows-x86_64.zip
          cmake-root-dir: ${{ github.workspace }}\iotdb\compile-tools\thrift\target\cmake-3.23.1-windows-x86_64
        run: |
          cd ${{ github.workspace }}\iotdb
          set Path=%Path%;${{ github.workspace }}\win_flex_bison-latest
          set Path
          mvn package -Dcmake.generator="Visual Studio 17 2022" -P compile-cpp -pl server,client-cpp,example/client-cpp-example -am -DskipTests -Dboost.include.dir="%boost-include-dir%" -Dboost.library.dir="%boost-library.dir%" -Dcmake.url="%cmake-url%" -Dcmake.root.dir="%cmake-root-dir%"
#---client-cpp
      - name: Upload apache-iotdb-client-cpp-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}.zip
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/client-cpp/target/client-cpp-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-client-cpp-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}-x86_64.zip
          asset_content_type: application/zip
      - name: Upload apache-iotdb-client-cpp-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}.zip
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/client-cpp/target/client-cpp-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-client-cpp-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}-x86_64.zip
          asset_content_type: application/zip
#---client-cpp-example
      - name: compress client-cpp-example
        shell: bash
        run: |
          cd iotdb/example/client-cpp-example/target
          7z a  client-cpp-example-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip client CMakeLists.txt SessionExample.cpp
#---client-cpp-example
      - name: Upload apache-iotdb-client-cpp-example-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}.zip
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/example/client-cpp-example/target/client-cpp-example-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-client-cpp-example-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}-x86_64.zip
          asset_content_type: application/zip
      - name: Upload apache-iotdb-client-cpp-example-${{ steps.iotdb-info.outputs.version }}-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}.zip
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/example/client-cpp-example/target/client-cpp-example-${{ steps.iotdb-info.outputs.version }}-cpp-windows-x86_64.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-client-cpp-example-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}-${{ matrix.os }}-x86_64.zip
          asset_content_type: application/zip
#--------
  build-in-linux:
    needs: [ collect,create-release-java8,create-release-java11 ]
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        iotdb_version: [ rel/0.13,rel/1.1,master ]
        java_version: [ 8,11 ]
    runs-on: ubuntu-latest

    steps:
      - name: Set java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}

      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: ${{ matrix.iotdb_version }}
          fetch-depth: 0

      - name: Collect IoTDB info
        id: iotdb-info
        run: |
          cd ${{ github.workspace }}/iotdb
          echo "::set-output name=commit::$(git rev-parse --short HEAD)"
          echo "::set-output name=branch::$(git branch |grep ^*|cut -d ' ' -f 2)"
          echo "::set-output name=version::$(cat pom.xml | grep -e '^    <version>' | sed 's# ##g' | sed 's#<version>##g' | sed 's#</version>##g')"
          # To distinguish master and rel/1.0 branches, add temporary variables
          echo "::set-output name=tmp_branch::$(echo ${{ matrix.iotdb_version }} | sed "s:/::")"

      - name: Build Apache IoTDB binaries
        shell: bash
        run: |
          cd ${{ github.workspace }}/iotdb
          mvn clean package -DskipTests
          # -P compile-grafana-plugin
#---all
      - name: Upload apache-iotdb-${{ steps.iotdb-info.outputs.version }}-all-bin-${{ steps.iotdb-info.outputs.tmp_branch }}.zip
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-all-bin.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-all-bin-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload apache-iotdb-${{ steps.iotdb-info.outputs.version }}-all-bin-${{ steps.iotdb-info.outputs.tmp_branch }}.zip
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-all-bin.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-all-bin-${{ steps.iotdb-info.outputs.tmp_branch }}-${{ steps.iotdb-info.outputs.commit }}.zip
          asset_content_type: application/zip
#---grafana-connector (only rel/0.13 support grafana-connector)
      - name: Upload apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-connector-bin.zip
        if: ${{ matrix.iotdb_version == 'rel/0.13' && matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-connector-bin.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-connector-bin-${{ steps.iotdb-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-connector-bin.zip
        if: ${{ matrix.iotdb_version == 'rel/0.13' && matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-connector-bin.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-connector-bin-${{ steps.iotdb-info.outputs.commit }}.zip
          asset_content_type: application/zip
#---grafana-plugin  #  && matrix.iotdb_version != 'rel/1.0'
      - name: Upload apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-plugin-bin.zip
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-plugin-bin.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-plugin-bin-${{ steps.iotdb-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-plugin-bin.zip
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-plugin-bin.zip
          asset_name: apache-iotdb-${{ steps.iotdb-info.outputs.version }}-grafana-plugin-bin-${{ steps.iotdb-info.outputs.commit }}.zip
          asset_content_type: application/zip
#--------
  build-benchmark:
    needs: [ collect,create-release-java8,create-release-java11 ]
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        java_version: [ 8,11 ]
    runs-on: ubuntu-latest

    steps:
# set java
      - name: Set java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}
## clone iotdb-1.0
#      - name: Checkout iotdb-1.0
#        uses: actions/checkout@v2
#        with:
#          path: iotdb-1.0
#          repository: 'apache/iotdb'
#          ref: rel/1.0
#          fetch-depth: 0
## compile iotdb's jdbc and session
#      - name: compile iotdb
#        run: |
#          cd ${{ github.workspace }}/iotdb-1.0
#          mvn clean install -DskipTests -am -pl jdbc,session
##          mvn install -DskipTests -am -pl distribution
# clone iot-benchmark
      - name: Checkout iot-benchmark
        uses: actions/checkout@v2
        with:
          path: iot-benchmark
          repository: 'thulab/iot-benchmark'
          ref: master
          fetch-depth: 0

      - name: Collect benchmark info
        id: benchmark-info
        run: |
          cd ${{ github.workspace }}/iot-benchmark
          echo "::set-output name=commit::$(git rev-parse --short HEAD)"
# compile iot-benchmark
      - name: Build benchmark binaries
        id: compile-benchmark
        run: |
          cd ${{ github.workspace }}/iot-benchmark
          mvn clean package -DskipTests -am -pl core,iotdb-0.13,iotdb-1.0,influxdb,influxdb-2.0,timescaledb,timescaledb-cluster,tdengine-3.0
#          mssqlserver,sqlite,kairosdb,questdb,influxdb,opentsdb,tdengine
#---0.13
      - name: Upload benchmark-iotdb-0.13
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/iotdb-0.13/target/iot-benchmark-iotdb-0.13.zip
          asset_name: iot-benchmark-iotdb-0.13-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload benchmark-iotdb-0.13
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/iotdb-0.13/target/iot-benchmark-iotdb-0.13.zip
          asset_name: iot-benchmark-iotdb-0.13-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
#---1.0
      - name: Upload benchmark-iotdb-1.0
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/iotdb-1.0/target/iot-benchmark-iotdb-1.0.zip
          asset_name: iot-benchmark-iotdb-1.0-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload benchmark-iotdb-1.0
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/iotdb-1.0/target/iot-benchmark-iotdb-1.0.zip
          asset_name: iot-benchmark-iotdb-1.0-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
#---influxdb
      - name: Upload benchmark-influxdb
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/influxdb/target/iot-benchmark-influxdb.zip
          asset_name: iot-benchmark-influxdb-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload benchmark-influxdb
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/influxdb/target/iot-benchmark-influxdb.zip
          asset_name: iot-benchmark-influxdb-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
#---influxdb 2.0
      - name: Upload benchmark-influxdb-2.0
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/influxdb-2.0/target/iot-benchmark-influxdb-2.0.zip
          asset_name: iot-benchmark-influxdb-2.0-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload benchmark-influxdb-2.0
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/influxdb-2.0/target/iot-benchmark-influxdb-2.0.zip
          asset_name: iot-benchmark-influxdb-2.0-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
#---timescaledb
      - name: Upload benchmark-timescaledb
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/timescaledb/target/iot-benchmark-timescaledb.zip
          asset_name: iot-benchmark-timescaledb-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload benchmark-timescaledb
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/timescaledb/target/iot-benchmark-timescaledb.zip
          asset_name: iot-benchmark-timescaledb-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
##---timescaledb-cluster
      - name: Upload benchmark-timescaledb
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/timescaledb-cluster/target/iot-benchmark-timescaledb-cluster.zip
          asset_name: iot-benchmark-timescaledb-cluster-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload benchmark-timescaledb
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/timescaledb-cluster/target/iot-benchmark-timescaledb-cluster.zip
          asset_name: iot-benchmark-timescaledb-cluster-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
#---tdengine 3.0
      - name: Upload benchmark-tdengine 3.0
        if: ${{ matrix.java_version == '8' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java8.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/tdengine-3.0/target/iot-benchmark-tdengine-3.0.zip
          asset_name: iot-benchmark-tdengine-3.0-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
      - name: Upload benchmark-tdengine
        if: ${{ matrix.java_version == '11' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release-java11.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iot-benchmark/tdengine-3.0/target/iot-benchmark-tdengine-3.0.zip
          asset_name: iot-benchmark-tdengine-3.0-${{ steps.benchmark-info.outputs.commit }}.zip
          asset_content_type: application/zip
