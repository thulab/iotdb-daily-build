# 用于在多种不同操作系统，多种jdk环境下，进行iotdb的启停测试
name: check scripts
on:
  #  push:
  #    branches:
  #      - master
  #  schedule:
  #      - cron: "* */24 * * *"
  workflow_dispatch:
jobs:
  #--------
  check-commit:
    outputs:
      commit_id: ${{steps.check-cur-status.outputs.commit_id}}
      commit_id_short: ${{ steps.check-cur-status.outputs.commit_id_short }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        os: [ ubuntu-latest ]
    steps:
      # get iotdb
      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: 'rel/1.0'
          fetch-depth: 0
      # get cur-repository
      - name: Checkout iotdb-daily-build
        uses: actions/checkout@v2
        with:
          path: iotdb-daily-build
          repository: 'xiaoyekanren/iotdb-daily-build'
          ref: 'master'
          fetch-depth: 0
      # check cur status
      - name: check
        id: check-cur-status
        run: |
          cd ${{ github.workspace }}/iotdb
          echo "::set-output name=commit_id::$( git rev-parse HEAD )"
          echo "::set-output name=commit_id_short::$( git rev-parse --short HEAD )"
          echo "::set-output name=commit_time::$(git log -n1 --pretty='format:%cd' --date=iso)"
          echo "::set-output name=commit_user::$(git log | head -n 2 | tail -n 1 | cut -d ' ' -f 2)"
          echo $(git rev-parse HEAD)
      # check update
      - name: check
        id: check-old-commit
        run: |
          cd ${{ github.workspace }}/iotdb-daily-build
          echo "::set-output name=last_commit::$(cat .github/release_history.txt | tail -n 1)"
          echo $(cat .github/release_history.txt | tail -n 1)
      # compare
      - name: check check's results
        run: |
          echo "txt pid: ${{ steps.check-old-commit.outputs.last_commit }}"
          echo "res pid: ${{ steps.check-cur-status.outputs.commit_id }}"
      # equal means no update
      # "exit 0" is exits normally，"exit other" is exception exit
      - name: check check's results
        if: ${{ steps.check-cur-status.outputs.commit_id == steps.check-old-commit.outputs.last_commit || steps.check-cur-status.outputs.commit_user == 'github-actions[bot]' }}
        run: |
          exit 0
          exit 1

  check-in-linux:
    needs: check-commit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        java_version: [ 8, 11, 13, 15, 17, 18, 19 ]
        os: [ ubuntu-latest ]
    steps:
      # set java
      - name: Set java ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'zulu'
      # get iotdb
      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: 'rel/1.0'
          fetch-depth: 0
      # build iotdb
      - name: build iotdb
        id: build-iotdb
        run: |
          cd ${{ github.workspace }}/iotdb
          mvn clean package -DskipTests -am -pl distribution
          mv ${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-1.0.0-SNAPSHOT-all-bin/apache-iotdb-1.0.0-SNAPSHOT-all-bin ${{ github.workspace }}/iotdb-binary
      # test
      - name: test start on ${{matrix.os}}
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          cd ${{ github.workspace }}/iotdb-binary
          nohup sbin/start-confignode.sh > /dev/null 2>&1 &
          cf_pid=$!
          echo "confignode pid is ${cf_pid}"
          sleep 5
          nohup sbin/start-datanode.sh > /dev/null 2>&1 &
          df_pid=$!
          echo "datanode pid is ${df_pid}"
          sleep 60

          ps_cf_pid=$(ps -aux | grep $cf_pid | grep -v 'grep --color=auto' | grep -v '[g]rep' | awk '{print $2}')
          ps_df_pid=$(ps -aux | grep $df_pid | grep -v 'grep --color=auto' | grep -v '[g]rep' | awk '{print $2}')

          if [ "${ps_df_pid}1" == "1" ]; then
              echo "Check start-datanode failed. exit.."
              echo ------${ps_df_pid}1------
              exit 1
          else
              echo "Check start-datanode Success. "
          fi

          if [ "${ps_cf_pid}1" == "1" ]; then
              echo "Check start-confignode failed. exit.."
              echo ------${ps_cf_pid}1------
              exit 1
          else
              echo "Check start-confignode Success. "
          fi

          sbin/stop-datanode.sh && sleep 5
          ps -aux | grep $df_pid | grep -v 'grep --color=auto' | grep -v '[g]rep' | awk '{print $2}'
          ps_df_pid=$(ps -aux | grep $df_pid | grep -v 'grep --color=auto' | grep -v '[g]rep' | awk '{print $2}')
          if [ "${ps_df_pid}1" == "1" ]; then
              echo "Check stop-datanode Success. "
          else
              echo "Check stop-datanode failed. exit.."
              echo ------${ps_df_pid}1------
              exit 1
          fi

          sbin/stop-confignode.sh && sleep 5
          ps -aux | grep $cf_pid | grep -v 'grep --color=auto' | grep -v '[g]rep' | awk '{print $2}'
          ps_cf_pid=$(ps -aux | grep $cf_pid | grep -v 'grep --color=auto' | grep -v '[g]rep' | awk '{print $2}')
          if [ "${ps_cf_pid}1" == "1" ]; then
              echo "Check stop-confignode Success. "
          else
              echo "Check stop-confignode failed. exit.."
              echo ------${ps_cf_pid}1------
              exit 1
          fi

  check-in-windows:
    needs: check-commit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        java_version: [ 8, 11, 13, 15, 17, 18, 19 ]
        os: [ windows-latest ]
    steps:
      # set java
      - name: Set java ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'zulu'
      # get iotdb
      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: 'rel/1.0'
          fetch-depth: 0
      # build iotdb
      - name: build iotdb
        id: build-iotdb
        run: |
          cd ${{ github.workspace }}/iotdb
          mvn clean package -DskipTests -am -pl distribution
          mv ${{ github.workspace }}/iotdb/distribution/target/apache-iotdb-1.0.0-SNAPSHOT-all-bin/apache-iotdb-1.0.0-SNAPSHOT-all-bin ${{ github.workspace }}/iotdb-binary
      # test start on windows
      - name: test start on ${{matrix.os}}
        if: ${{ matrix.os == 'windows-2022' }}
        shell: cmd
        run: |
          cd ${{ github.workspace }}/iotdb-binary/sbin
          set current_dir=%~dp0
          set superior_dir=%current_dir%\..\

          @REM -----启动confignode-----
          echo start confignode..
          start-confignode.bat -d
          echo

          @REM -----睡10秒-----
          echo sleep 10..
          TIMEOUT /T 10 /NOBREAK

          @REM -----检查 confignode PID 是否存在-----
          @REM 拿到 cn_internal_port
          for /f  "eol=; tokens=2,2 delims==" %%i in ('findstr /i "^cn_internal_port"
          %superior_dir%\conf\iotdb-confignode.properties') do (
            set cn_internal_port=%%i
          )
          @REM 拿到 cn_internal_address
          for /f  "eol=; tokens=2,2 delims==" %%i in ('findstr /i "cn_internal_address"
          %superior_dir%\conf\iotdb-confignode.properties') do (
            set cn_internal_address=%%i
          )
          @REM 通过这两个连起来拿到pid %%a
          for /f "tokens=5" %%a in ('netstat /ano ^| findstr %cn_internal_address%:%cn_internal_port%') do (
            if "%%a"=="" (
              echo "start confignode failed."
              exit
              ) else (
                echo "start confignode succeed. continue."
                )

          @REM -----检查 confignode 端口占用-----
          echo Use netstat check port binding about confignode..
          netstat -ano|findstr 22277

          @REM -----启动datanode-----
          echo start datanode..
          start-datanode.bat -d
          echo

          @REM -----睡10秒-----
          echo sleep 10..
          TIMEOUT /T 10 /NOBREAK

          @REM -----检查 datanode PID 是否存在-----
          @REM 拿到 dn_rpc_port
          for /f  "eol=; tokens=2,2 delims==" %%i in ('findstr /i "^dn_rpc_port"
          %superior_dir%\conf\iotdb-datanode.properties') do (
            set dn_rpc_port=%%i
          )
          @REM @REM 拿到 dn_rpc_address
          for /f  "eol=; tokens=2,2 delims==" %%i in ('findstr /i "dn_rpc_address"
          %superior_dir%\conf\iotdb-datanode.properties') do (
            set dn_rpc_address=%%i
          )
          for /f "tokens=5" %%a in ('netstat /ano ^| findstr %dn_rpc_address%:%dn_rpc_port%') do (
            if "%%a"=="" (
              echo "start datanode failed."
              exit
              ) else (
                echo "start datanode succeed. continue."
                )
          )

          @REM -----检查 datanode 端口占用-----
          echo Use netstat check port binding about datanode..
          netstat -ano|findstr 6667

          echo "Both confignode and datanode start suceessed."

          @REM -----停止 datanode-----
          echo "stop datanode."
          stop-datanode.bat
          echo

          @REM -----检查 datanode PID 是否存在-----
          echo "check datanode pid.."
          for /f "tokens=5" %%a in ('netstat /ano ^| findstr %dn_rpc_address%:%dn_rpc_port%') do (
            if "%%a"=="" (
              echo "stop datanode succeed. continue."
              ) else (
                echo "PID is %%a"
                echo "stop datanode failed. exit."
                exit
                )
          )

          @REM -----停止 confignode-----
          echo "stop confignode."
          stop-confignode.bat
          echo

          @REM -----检查 confignode PID 是否存在-----
          echo "check confignode pid.."
          for /f "tokens=5" %%a in ('netstat /ano ^| findstr %cn_internal_address%:%cn_internal_port%') do (
            if "%%a"=="" (
              echo "stop confignode succeed. continue."
              ) else (
                echo "PID is %%a"
                echo "stop confignode failed. exit."
                exit
                )

  push-commit-id:
    needs: [ check-in-linux,check-in-windows ]
    runs-on: ubuntu-latest
    steps:
      # get time
      - name: collect common info
        shell: bash
        id: sys-info
        run: echo "::set-output name=date::$(date +"%Y-%m-%d")"
      # get cur-repository
      - name: Checkout iotdb-daily-build
        uses: actions/checkout@v2
        with:
          path: iotdb-daily-build
          repository: 'xiaoyekanren/iotdb-daily-build'
          ref: 'master'
          fetch-depth: 0
      # push commit id to repository
      - name: push commit
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ${{ github.workspace }}/iotdb-daily-build
          git config --local user.email "876670773+github-actions[bot]@qq.com"
          git config --local user.name "github-actions[bot]"
          echo ${{ needs.check-commit.outputs.commit_id }} >> .github/release_history.txt
          git add .github/release_history.txt
          git commit -m "${{ steps.sys-info.outputs.date }}-${{ needs.check-commit.outputs.commit_id_short }}"
          git push -u origin master
